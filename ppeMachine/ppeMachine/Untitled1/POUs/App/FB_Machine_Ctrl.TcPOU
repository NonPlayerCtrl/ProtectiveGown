<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.3">
  <POU Name="FB_Machine_Ctrl" Id="{46d7f67e-9831-4832-8cd2-8a7ef09807d1}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Machine_Ctrl EXTENDS CycleHandleFB
VAR_INPUT
	Ctrl_ref:					REFERENCE TO Ctrl_Typ;
	FB_Machine_Run_ref:			REFERENCE TO FB_Machine_Run;
	FB_Mechinit_ref:			REFERENCE TO FB_Mechinit;
	FB_OFF_ref:					REFERENCE TO FB_OFF;
END_VAR
VAR_OUTPUT
END_VAR
VAR
	MethInitDone:		BOOL;
	StopFlag:BOOL;
	
	TriggerOff:Trigger;
	
END_VAR
VAR CONSTANT

// States		
	MAIN_INIT:				INT:=0;
	MAIN_OFF:				INT:=10;
	MAIN_STANDBY:			INT:=11;
	MAIN_MECHINIT:			INT:=15;
	MAIN_RUN:				INT:=20;
	MAIN_EM_STOP:			INT:=100;


END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[	IF NOT MethInitDone THEN
		MethInitDone	:= Meth_Init();
	END_IF
	
	
	IF (gMachineCtrl.Cmd.EmStop)
	AND FB_OFF_ref.Running = FALSE THEN	
		THIS^.StepNo	:= 	MAIN_EM_STOP;
	END_IF
	
	IF  THIS^.CMD.Pause = FALSE THEN
		
		//-----------------------------
		//State Machine
		//-----------------------------
		CASE THIS^.StepNo OF
			MAIN_INIT:
				IF THIS^.StepOneShotTrig THEN
					THIS^.Monitoring.StepMessage	:= 'Init: Start.';
				ELSIF Meth_Enable(TRUE) THEN
					THIS^.StepNo	:= 	MAIN_OFF;
				END_IF
			
			MAIN_OFF:
				IF THIS^.StepOneShotTrig THEN
					THIS^.Monitoring.StepMessage	:= 'OFF';
				ELSIF Meth_Standby(TRUE) THEN
					THIS^.StepNo	:= 	MAIN_MECHINIT;
				END_IF
				
			MAIN_MECHINIT:
				IF THIS^.StepOneShotTrig THEN
					THIS^.Monitoring.StepMessage	:= 'Mechinit';
					Meth_Mechint(FALSE);
				ELSIF Meth_Mechint(TRUE) THEN
					THIS^.StepNo	:= 	MAIN_STANDBY;
				END_IF				

	
			MAIN_STANDBY:
				IF THIS^.StepOneShotTrig THEN
					THIS^.Monitoring.StepMessage	:= 'OFF';
				ELSIF Meth_Start(TRUE) THEN
					THIS^.StepNo	:= 	MAIN_RUN;
				END_IF				
			
			
				
			MAIN_RUN:
				IF THIS^.StepOneShotTrig THEN
					THIS^.Monitoring.StepMessage	:= 'RUN';
					Meth_Run(FALSE);
				ELSIF Meth_Run(TRUE) THEN
					THIS^.StepNo	:= 	MAIN_INIT;
				END_IF
	
				
			//OFF
			MAIN_EM_STOP:
				IF THIS^.StepOneShotTrig THEN
					THIS^.Monitoring.StepMessage	:= 'Powering OFF';
					Meth_EmStop(FALSE);
				ELSIF Meth_EmStop(TRUE) THEN
					THIS^.StepNo	:= 	MAIN_INIT;
				END_IF				
				
		END_CASE
	
	ELSE
		THIS^.Monitoring.StepMessage:= 'Pause';
		
		IF THIS^.Status.Fault = TRUE THEN
			IF Meth_EmStop(TRUE) THEN
				THIS^.CMD.ResetCycle	:= TRUE;		// Reset the all state machine to start point
			END_IF
			
		END_IF
		
	END_IF
	

	
	// Reset Meth_EmStop when at Init State
	//IF THIS^.Pause = FALSE THEN
	//	Meth_EmStop(FALSE);
	//END_IF
	
	
	(*
	
	
	//============================================================================================
	// Any Fb Fault
	AnyFbFaultFlag	:= fbMechInit_ref.Fault OR fbRun_ref.Fault OR fbStop_ref.Fault;
	
	//============================================================================================
	// Set Fault flag on bEmStopActive_ref or bExternalFault
	IF (THIS^.Status.Running = TRUE)
		AND (ExternalFaultTrig.EDGEPOS(bExternalFault)
			OR EmStopTrig.EDGEPOS(bEmStopActive_ref
				AND Ctrl_ref.Out.Status.InitDone
				AND Ctrl_ref.Out.Status.AtPowerDisable = FALSE
				AND Ctrl_ref.Out.Status.AtOff = FALSE)
			OR AnyFbFaultFlag)  THEN
		THIS^.Fault	:= TRUE;	// When fault, Pause rise automatic on the fb
	END_IF
	
	
	
	*)
	//============================================================================================
	// Reset Internal Function Blocks
	IF THIS^.CMD.ResetCycle = TRUE THEN
		IF FB_Machine_Run_ref.Running OR FB_Machine_Run_ref.Pause OR FB_Machine_Run_ref.Fault THEN
			FB_Machine_Run_ref.ResetCycle	:= TRUE;
		END_IF
	END_IF
	
	//============================================================================================			
	
	
THIS^.Delay();
THIS^.CH_Logic();]]></ST>
    </Implementation>
    <Method Name="Meth_EmStop" Id="{31bc0202-3683-4e3e-9430-a7c194fdbba7}">
      <Declaration><![CDATA[METHOD Meth_EmStop : BOOL
VAR_INPUT
	Execute: 	BOOL;
END_VAR

VAR_INST	
	ExecuteTrig: 	Trigger;	
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[

IF ExecuteTrig.EDGEPOS(Execute) THEN
	Meth_EmStop	:= FALSE;
	THIS^.SubStepNo:= 	1;	
END_IF

IF ExecuteTrig.EDGENEG(Execute) THEN
	Meth_EmStop	:=	FALSE;
END_IF

gMachineCtrl.Cmd.EmStop:=FALSE;

CASE THIS^.SubStepNo OF
	   
	1:
		//THIS^.Monitoring.StepMessage	:= 'Start mechint';
		THIS^.FB_OFF_ref.Start	:=TRUE;
		THIS^.SubStepNo:=2;
		
	2:
		//THIS^.Monitoring.StepMessage	:= 'Wait  Mechint';
		IF THIS^.FB_OFF_ref.Done	THEN
			THIS^.SubStepNo:=0;
			Meth_EmStop	:=	TRUE;
		END_IF
	
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="Meth_Enable" Id="{303d408d-fbbf-4725-89fb-2cde3de4bffa}">
      <Declaration><![CDATA[METHOD PRIVATE Meth_Enable : BOOL
VAR_INPUT
	Execute: 	BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF MethInitDone then
	THIS^.CMD.Start	:= TRUE;
END_IF

IF THIS^.CMD.Start THEN
	
	THIS^.Monitoring.StepMessage			:= 'Start';
	THIS^.Monitoring.Error_Text				:= 'Start Fail';
	THIS^.CMD.Deacivate_Sequence_Time_Out	:= TRUE;	// Disable time out to the all sequence
	THIS^.CMD.DeactivateStepTimeOut			:= TRUE;	// Disable time out to the actual step
	THIS^.Parameter.TimeOut					:= T#0.5S;

	THIS^.CMD.Start			:= FALSE;
	THIS^.Status.Done		:= FALSE;
	THIS^.Status.Running	:= TRUE;
	
	// Reset Commands and Statuses												
	
	Meth_Enable	:= TRUE;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="Meth_Init" Id="{5043f1f9-f482-4867-9783-e680ac28125b}">
      <Declaration><![CDATA[METHOD Meth_Init :BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Meth_Init:=TRUE;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="Meth_Mechint" Id="{ad641c66-23b5-4d10-93cb-151617be7487}">
      <Declaration><![CDATA[METHOD Meth_Mechint : BOOL
VAR_INPUT
	Execute:BOOL;
END_VAR
VAR_INST	
	ExecuteTrig: 	Trigger;	
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF ExecuteTrig.EDGEPOS(Execute) THEN
	Meth_Mechint	:= FALSE;
	THIS^.SubStepNo:= 	1;	
END_IF

IF ExecuteTrig.EDGENEG(Execute) THEN
	Meth_Mechint	:=	FALSE;
END_IF

CASE THIS^.SubStepNo OF
	   
	1:
		THIS^.Monitoring.StepMessage	:= 'Start mechint';
		THIS^.FB_Mechinit_ref.Start	:=TRUE;
		THIS^.SubStepNo:=2;
		
	2:
		THIS^.Monitoring.StepMessage	:= 'Wait  Mechint';
		IF THIS^.FB_Mechinit_ref.Done	THEN
			THIS^.SubStepNo:=0;
			Meth_Mechint	:=	TRUE;
		END_IF
	
END_CASE
		]]></ST>
      </Implementation>
    </Method>
    <Method Name="Meth_Run" Id="{93a0b041-47d5-4e3b-877d-363f12fa8b88}">
      <Declaration><![CDATA[METHOD Meth_Run : BOOL;
VAR_INPUT
	Excute:BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF Excute = FALSE THEN
	THIS^.SubStepNo :=0;
ELSIF Excute AND_THEN THIS^.SubStepNo = 0 THEN
	THIS^.SubStepNo :=10;
END_IF	

IF Ctrl_ref.Cmd.Stop THEN
	StopFlag:=TRUE;
	THIS^.Monitoring.StepMessage	:= 'STOPPING';
END_IF


CASE THIS^.SubStepNo OF
	
	0://Wait
		THIS^.Monitoring.SubStepMessage	:= 'Wait';
		
	10://Start
		THIS^.Monitoring.SubStepMessage	:= 'Statr';	
		FB_Machine_Run_ref.Start	 :=TRUE;
		THIS^.SubStepNo				:=20;
		
	20://Wait cycle end	
		THIS^.Monitoring.SubStepMessage	:= 'Wait cycle to end';	
		IF FB_Machine_Run_ref.Done THEN
			THIS^.SubStepNo				:=30;
			Ctrl_ref.Status.SessionCounter:=Ctrl_ref.Status.SessionCounter+1;
			PersistentStruct.LifeTimerCounter:=PersistentStruct.LifeTimerCounter+1;
		END_IF
	
	30: //Check if continue	or Stop
		IF StopFlag THEN
			Meth_Run :=TRUE;
		ELSIF Ctrl_ref.Parameters.Continues 
		OR Ctrl_ref.Status.SessionCounter < Ctrl_ref.Parameters.NumberOfCycles   THEN
			THIS^.SubStepNo		:=10;
		ELSE
			 Meth_Run :=TRUE;		
		END_IF

END_CASE



]]></ST>
      </Implementation>
    </Method>
    <Method Name="Meth_Standby" Id="{86414ed8-fab3-439f-85c0-9b88f112824e}">
      <Declaration><![CDATA[METHOD Meth_Standby : BOOL
VAR_INPUT
	Execute: 	BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF Ctrl_ref.Cmd.SwitchOn THEN
	Meth_Standby:=TRUE;
	//Ctrl_ref.Cmd.Start:=FALSE;
	
	//reset session
	//StopFlag:=FALSE;
	//Ctrl_ref.Status.SessionCounter:=0;	
	
ELSIF	Ctrl_ref.Cmd.Manual THEN
	THIS^.Monitoring.StepMessage	:= 'Manual';
ELSE
	THIS^.Monitoring.StepMessage	:= 'OFF';	
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="Meth_Start" Id="{72dc66f0-aff8-4775-9713-c794bbc481d6}">
      <Declaration><![CDATA[METHOD Meth_Start : BOOL
VAR_INPUT
	Execute: 	BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF Ctrl_ref.Cmd.Start THEN
	Meth_Start:=TRUE;
	Ctrl_ref.Cmd.Start:=FALSE;
	
	//reset session
	StopFlag:=FALSE;
	Ctrl_ref.Status.SessionCounter:=0;	
	
ELSIF	Ctrl_ref.Cmd.Manual THEN
	THIS^.Monitoring.StepMessage	:= 'Manual';
ELSE
	THIS^.Monitoring.StepMessage	:= 'StandBy';	
END_IF]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_Machine_Ctrl">
      <LineId Id="85" Count="4" />
      <LineId Id="302" Count="0" />
      <LineId Id="350" Count="0" />
      <LineId Id="307" Count="0" />
      <LineId Id="305" Count="0" />
      <LineId Id="303" Count="0" />
      <LineId Id="90" Count="12" />
      <LineId Id="183" Count="0" />
      <LineId Id="186" Count="3" />
      <LineId Id="185" Count="0" />
      <LineId Id="275" Count="0" />
      <LineId Id="269" Count="5" />
      <LineId Id="260" Count="0" />
      <LineId Id="268" Count="0" />
      <LineId Id="267" Count="0" />
      <LineId Id="262" Count="4" />
      <LineId Id="261" Count="0" />
      <LineId Id="191" Count="0" />
      <LineId Id="251" Count="1" />
      <LineId Id="184" Count="0" />
      <LineId Id="193" Count="1" />
      <LineId Id="202" Count="0" />
      <LineId Id="199" Count="1" />
      <LineId Id="192" Count="0" />
      <LineId Id="182" Count="0" />
      <LineId Id="316" Count="1" />
      <LineId Id="310" Count="5" />
      <LineId Id="308" Count="1" />
      <LineId Id="103" Count="13" />
      <LineId Id="197" Count="0" />
      <LineId Id="118" Count="4" />
      <LineId Id="172" Count="4" />
      <LineId Id="123" Count="24" />
      <LineId Id="154" Count="1" />
      <LineId Id="83" Count="0" />
      <LineId Id="177" Count="0" />
      <LineId Id="224" Count="2" />
    </LineIds>
    <LineIds Name="FB_Machine_Ctrl.Meth_EmStop">
      <LineId Id="14" Count="9" />
      <LineId Id="39" Count="1" />
      <LineId Id="24" Count="14" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Machine_Ctrl.Meth_Enable">
      <LineId Id="23" Count="0" />
      <LineId Id="26" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="24" Count="1" />
      <LineId Id="6" Count="12" />
      <LineId Id="21" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Machine_Ctrl.Meth_Init">
      <LineId Id="5" Count="1" />
    </LineIds>
    <LineIds Name="FB_Machine_Ctrl.Meth_Mechint">
      <LineId Id="11" Count="7" />
      <LineId Id="5" Count="0" />
      <LineId Id="20" Count="3" />
      <LineId Id="19" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="26" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="29" Count="0" />
      <LineId Id="35" Count="0" />
      <LineId Id="33" Count="1" />
      <LineId Id="28" Count="0" />
      <LineId Id="24" Count="1" />
    </LineIds>
    <LineIds Name="FB_Machine_Ctrl.Meth_Run">
      <LineId Id="7" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="24" Count="0" />
      <LineId Id="19" Count="0" />
      <LineId Id="21" Count="1" />
      <LineId Id="48" Count="0" />
      <LineId Id="57" Count="0" />
      <LineId Id="49" Count="0" />
      <LineId Id="23" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="16" Count="0" />
      <LineId Id="25" Count="2" />
      <LineId Id="29" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="31" Count="5" />
      <LineId Id="30" Count="0" />
      <LineId Id="44" Count="0" />
      <LineId Id="52" Count="0" />
      <LineId Id="37" Count="2" />
      <LineId Id="50" Count="1" />
      <LineId Id="40" Count="0" />
      <LineId Id="46" Count="0" />
      <LineId Id="41" Count="0" />
      <LineId Id="43" Count="0" />
      <LineId Id="47" Count="0" />
      <LineId Id="42" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_Machine_Ctrl.Meth_Standby">
      <LineId Id="6" Count="12" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Machine_Ctrl.Meth_Start">
      <LineId Id="7" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="20" Count="4" />
      <LineId Id="9" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>