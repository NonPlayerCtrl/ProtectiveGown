<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.3">
  <POU Name="stepIMBasicAxis_FB" Id="{511da624-ad3d-0d97-2bab-1994306055db}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK PUBLIC stepIMBasicAxis_FB EXTENDS CoE_BasicAxis_FB  
VAR_INPUT		
	DigIn 		AT %I* : UDINT;
END_VAR
VAR_IN_OUT	
END_VAR


VAR

END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
AxisCtrlPtr^.Input.Parameter.Drive.eDriveType := enumDriveType.stepIM;	
AxisCtrlPtr^.Input.Parameter.Drive.VendorNameID := eVendorNameID.Servotronics;
SUPER^(AxisRef:=AxisRef);

IF io_StatusWord<> 0 THEN
	AxisCtrlPtr^.Output.Status.DriveEnable := io_StatusWord.4;
ELSE	
	// Simulator 
	AxisCtrlPtr^.Output.Status.DriveEnable := TRUE;
END_IF	
 


//fbElmoIOsHandle(DigIn:=	pDigIn^);
//AxisCtrlPtr^.Output.Status.DriveEnable:=	fbElmoIOsHandle.bEnable;

]]></ST>
    </Implementation>
    <Method Name="CreateDriveErrMsgDetails" Id="{420778a2-c6bb-032c-2c41-9483809b9c17}">
      <Declaration><![CDATA[METHOD CreateDriveErrMsgDetails : enumMotorEvents
VAR_INPUT
	ErrorId			: UDINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE ErrorId OF
	
	16#2214:
		CreateDriveErrMsgDetails := enumMotorEvents.MotorOverCurrent;
		fnLogMsg(ADR(LogMsg_0),LOG_ERROR,'StepIM Drive ErrorId %d  ,Over Current',UDINT_TO_DINT(ErrorId),0,0);
	16#2310: 
		CreateDriveErrMsgDetails := enumMotorEvents.PLCIllegalParam;
		fnLogMsg(ADR(LogMsg_0),LOG_ERROR,'StepIM Drive ErrorId %d Under Voltage',UDINT_TO_DINT(ErrorId),0,0);
	16#3110:
		CreateDriveErrMsgDetails := enumMotorEvents.MotorSupplyError;
		fnLogMsg(ADR(LogMsg_0),LOG_ERROR,'StepIM Drive ErrorId %d Over-voltage',UDINT_TO_DINT(ErrorId),0,0);
	16#3120:
		CreateDriveErrMsgDetails := enumMotorEvents.MotorSupplyError ;
		fnLogMsg(ADR(LogMsg_0),LOG_ERROR,'StepIM Drive ErrorId %d Under-voltage',UDINT_TO_DINT(ErrorId),0,0);
	16#4310:
		CreateDriveErrMsgDetails := enumMotorEvents.MotorOverTemp ;	
		fnLogMsg(ADR(LogMsg_0),LOG_ERROR,'StepIM Drive ErrorId %d Over-temperature',UDINT_TO_DINT(ErrorId),0,0);
		
	16#5530:
		CreateDriveErrMsgDetails := enumMotorEvents.DriveComError;
		fnLogMsg(ADR(LogMsg_0),LOG_ERROR,'StepIM Drive ErrorId %d EEPROM fault',UDINT_TO_DINT(ErrorId),0,0);
		
	16#7310:
		CreateDriveErrMsgDetails := enumMotorEvents.MotorSpeedError;
		fnLogMsg(ADR(LogMsg_0),LOG_ERROR,'StepIM Drive ErrorId %d Over-speed',UDINT_TO_DINT(ErrorId),0,0);
	16#8130:
		CreateDriveErrMsgDetails := enumMotorEvents.DriveComError;
		fnLogMsg(ADR(LogMsg_0),LOG_ERROR,'StepIM Drive ErrorId %d Heartbeat loss',UDINT_TO_DINT(ErrorId),0,0);
	16#8400:
		CreateDriveErrMsgDetails := enumMotorEvents.MotorSpeedError;
		fnLogMsg(ADR(LogMsg_0),LOG_ERROR,'StepIM Drive ErrorId %d Velocity error',UDINT_TO_DINT(ErrorId),0,0);
	16#8611:
		CreateDriveErrMsgDetails := enumMotorEvents.MotorPositionError;
		fnLogMsg(ADR(LogMsg_0),LOG_ERROR,'StepIM Drive ErrorId %d Position error',UDINT_TO_DINT(ErrorId),0,0);

	16#F001:
 		CreateDriveErrMsgDetails := enumMotorEvents.MotorSpeedError;
		fnLogMsg(ADR(LogMsg_0),LOG_ERROR,'StepIM Drive ErrorId %d Acceleration/deceleration violation',UDINT_TO_DINT(ErrorId),0,0);				
		
	16#FF00: 
		CreateDriveErrMsgDetails := enumMotorEvents.MotorPositionError;
		fnLogMsg(ADR(LogMsg_0),LOG_ERROR,'StepIM Drive ErrorId %d Position Error',UDINT_TO_DINT(ErrorId),0,0);
		
	16#FF03:
		CreateDriveErrMsgDetails := enumMotorEvents.MotorPositionError;
		fnLogMsg(ADR(LogMsg_0),LOG_ERROR,'StepIM Drive ErrorId %d PLL lock lost',UDINT_TO_DINT(ErrorId),0,0);				
		
	16#FF04:
		CreateDriveErrMsgDetails := enumMotorEvents.MotorSupplyError;
		fnLogMsg(ADR(LogMsg_0),LOG_ERROR,'StepIM Drive ErrorId %d Power stage fault',UDINT_TO_DINT(ErrorId),0,0);		
		
	16#FF05:
		CreateDriveErrMsgDetails := enumMotorEvents.MotorFeedBackErr;
		fnLogMsg(ADR(LogMsg_0),LOG_ERROR,'StepIM Drive ErrorId %d Encoder failure',UDINT_TO_DINT(ErrorId),0,0);
	16#FF06:
		CreateDriveErrMsgDetails := enumMotorEvents.MotorSupplyError;
		fnLogMsg(ADR(LogMsg_0),LOG_ERROR,'StepIM Drive ErrorId %d Gate drive voltage Failure',UDINT_TO_DINT(ErrorId),0,0);
	ELSE
		fnLogMsg(ADR(LogMsg_0),LOG_ERROR,'unknown StepIM Drive ErrorId %d ',UDINT_TO_DINT(ErrorId),0,0);
		CreateDriveErrMsgDetails := enumMotorEvents.NoEvents;
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetErrCanAdr" Id="{62fa1877-2371-054e-014f-9226fd5655b6}">
      <Declaration><![CDATA[METHOD GetErrCanAdr : BOOL
VAR_INPUT
END_VAR


VAR
	
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[ SUPER^.GetCanOpenAdr();	

	CoeErrIdIndex	 := 16#603F;
	CoeErrIdSubIndex := 0;]]></ST>
      </Implementation>
    </Method>
    <Method Name="INIT_Specific" Id="{7a5d7539-5d69-0d84-0f18-cad1a839ecc4}">
      <Declaration><![CDATA[METHOD  INIT_Specific : BOOL 
VAR_INPUT
	bStart: 					BOOL;
END_VAR
VAR_INST	
	ComDelay:	TON;
	Init_Specific_State : INT ;
	ExecuteTrig: 	Trigger;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF ExecuteTrig.EDGEPOS(bStart) THEN
	INIT_Specific := FALSE ;
	IF AxisCtrlPtr^.Input.Parameter.Drive.bDisableFoE_Transfer THEN 
		Init_Specific_State:= 4;//10;
	ELSE
		CoEDrive_Ctrl_Adr.ParamsVersionObj.Index    := 16#2F80;
		CoEDrive_Ctrl_Adr.ParamsVersionObj.SunIndex := 1; 		
		Init_Specific_State:= 1;
	END_IF
END_IF


IF ExecuteTrig.EDGENEG(bStart) THEN
	Init_Specific_State := 0;
END_IF	

	
CASE Init_Specific_State OF							
						
	1:	
		Meth_UpdateDriveParams(FALSE);
		Init_Specific_State:=	2;		
	2:
//		SUPER^.ReadInitDriveParID(FALSE);
		IF Meth_UpdateDriveParams(TRUE) THEN
			Init_Specific_State:=	4;
		END_IF	
		

	4:
		
		Init_Specific_State := 0 ;
		INIT_Specific := TRUE ;
		AxisCtrlPtr^.Output.Status.AxisInitDone := TRUE ;
		AxisCtrlPtr^.Output.Status.ReadyForCmd := TRUE ;
END_CASE
	]]></ST>
      </Implementation>
    </Method>
    <Method Name="Meth_CoEChangOperationMode" Id="{0046be88-63b0-48b8-a7b6-650b232841f8}">
      <Declaration><![CDATA[METHOD Meth_CoEChangOperationMode : BOOL
VAR_INPUT
	Execute   : BOOL;	
	OperMode :eCaOpDriveModeOfOperation; 
END_VAR
VAR_INST
	ConfigHomeTrig  : 	Trigger;
	CngOperState : INT;
	Mode      : USINT;	
END_VAR

VAR
	
	
END_VAR

]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF ConfigHomeTrig.EDGEPOS(Execute) THEN

	Meth_CoEChangOperationMode := FALSE;				
	Mode := DINT_TO_USINT(OperMode);

	CngOperState := 1;
END_IF


IF ConfigHomeTrig.EDGENEG(Execute) THEN
	
	CngOperState := 0;
END_IF

OperationMode := DINT_TO_USINT(OperMode);
Meth_CoEChangOperationMode := TRUE;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="stepIMBasicAxis_FB">
      <LineId Id="2092" Count="1" />
      <LineId Id="2171" Count="0" />
      <LineId Id="2" Count="0" />
      <LineId Id="2189" Count="0" />
      <LineId Id="2188" Count="0" />
      <LineId Id="2187" Count="0" />
      <LineId Id="2201" Count="1" />
      <LineId Id="2142" Count="0" />
      <LineId Id="2204" Count="0" />
      <LineId Id="2203" Count="0" />
      <LineId Id="2115" Count="0" />
      <LineId Id="2113" Count="0" />
      <LineId Id="2122" Count="0" />
      <LineId Id="2112" Count="0" />
      <LineId Id="2157" Count="0" />
      <LineId Id="2156" Count="0" />
    </LineIds>
    <LineIds Name="stepIMBasicAxis_FB.CreateDriveErrMsgDetails">
      <LineId Id="13" Count="20" />
      <LineId Id="95" Count="0" />
      <LineId Id="34" Count="11" />
      <LineId Id="100" Count="0" />
      <LineId Id="46" Count="2" />
      <LineId Id="103" Count="0" />
      <LineId Id="49" Count="2" />
      <LineId Id="108" Count="0" />
      <LineId Id="52" Count="2" />
      <LineId Id="111" Count="0" />
      <LineId Id="55" Count="2" />
      <LineId Id="113" Count="0" />
      <LineId Id="58" Count="5" />
      <LineId Id="92" Count="2" />
      <LineId Id="8" Count="0" />
    </LineIds>
    <LineIds Name="stepIMBasicAxis_FB.GetErrCanAdr">
      <LineId Id="21" Count="1" />
      <LineId Id="13" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="stepIMBasicAxis_FB.INIT_Specific">
      <LineId Id="73" Count="19" />
      <LineId Id="130" Count="0" />
      <LineId Id="100" Count="2" />
      <LineId Id="119" Count="0" />
      <LineId Id="103" Count="0" />
      <LineId Id="121" Count="0" />
      <LineId Id="104" Count="0" />
      <LineId Id="110" Count="7" />
      <LineId Id="64" Count="0" />
    </LineIds>
    <LineIds Name="stepIMBasicAxis_FB.Meth_CoEChangOperationMode">
      <LineId Id="11" Count="2" />
      <LineId Id="19" Count="0" />
      <LineId Id="21" Count="9" />
      <LineId Id="5" Count="0" />
      <LineId Id="215" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>