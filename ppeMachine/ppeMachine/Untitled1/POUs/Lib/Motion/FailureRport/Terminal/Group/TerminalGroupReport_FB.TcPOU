<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.3">
  <POU Name="TerminalGroupReport_FB" Id="{2861ada8-63e0-0302-0267-c182570bf514}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK TerminalGroupReport_FB
VAR_INPUT
	Enable 				: BOOL;
	pGroupCtrl			: POINTER TO Terminal_Group_Ctrl_typ ;
	Ref_ev_Module_Event : REFERENCE TO ev_MOTOR_POSITION_ERROR REF= ev_MOTOR_POSITION_ERROR;
END_VAR
VAR_IN_OUT
	In 		: ARRAY[*]OF Terminal_Ctrl_typ ;	
	//Out		: ARRAY[*]OF ErrCollector_Out ;
END_VAR

VAR
	LogMsgInit          : BOOL := TRUE;
	LogMsg_0 			: LogMsg ;
	//Get old events from Q
	ExecuteTrig: 		Trigger;	
	WrongState :   		BOOL;
	nI         : DINT;
	InFault    : BOOL;
	
	fbPrgmBasic :FB_PrgmBasic;
	
	
	//Debug
	intErrorCounter : USINT := 0;
	
	LowerBound         : DINT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[




IF pGroupCtrl <> 0 THEN
		
	IF LogMsgInit THEN      
		LogMsgInit := FALSE ;
		fnLogMsgInit(ADR(LogMsg_0), pGroupCtrl^.In.Par.GroupName, ADR(LogGlobalArray), ADR(CONST_ZERO));
		LogMsg_0.Enable:= 		TRUE;
	END_IF

	IF Enable THEN
		InFault := FALSE;
		
		LowerBound := LOWER_BOUND(In,1);
		
		FOR nI:= LOWER_BOUND(In,1) TO UPPER_BOUND(In,1) DO

	
			IF 	In[nI].In.Par.Name <> 'Empty' THEN
							
				// IF already in error reset others status
				IF InFault THEN
					In[nI].Out.Status.Fault := FALSE;
				ELSE	
					//If terminal is not on OPER state
					IF ((In[nI].Out.Status.TerminalState AND eTerminalStates.OP) = 0) THEN
							
						IF In[nI].Out.Status.Active THEN
							InFault := TRUE;												
							
							IF In[nI].Out.Status.Fault = FALSE THEN
								Meth_SetError(nI);							
							END_IF
						ELSE // Module Not Active
							
							Meth_HandleModuleNotActive(nI);										
						END_IF
						In[nI].Out.Status.Fault := TRUE;
					ELSE
						In[nI].Out.Status.Fault := FALSE;		
					END_IF
				
						
				END_IF
				In[nI].Out.Status.Active := 0;
				In[nI].Out.Monitor.SubSysName := '';
			END_IF
			
		END_FOR
		
		IF NOT InFault THEN
			pGroupCtrl^.Out.Status.errorBit := 0;
		END_IF	
		
		// Reset if for was brake	
		In[nI].Out.Status.Active := 0;
		In[nI].Out.Monitor.SubSysName := '';
	END_IF
	
	

END_IF	
fbPrgmBasic();
//fnLogTransfer FUNCTION call
fnLogTransfer(ADR(LogMsg_0));]]></ST>
    </Implementation>
    <Method Name="Meth_HandleModuleNotActive" Id="{5a9f709d-92a7-033e-393a-2f9bbd539b56}">
      <Declaration><![CDATA[METHOD Meth_HandleModuleNotActive : BOOL
VAR_INPUT
	
	NonActiveIndex: DINT;
	
END_VAR
VAR
	internalIndex : DINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[	//if last
	IF NonActiveIndex = UPPER_BOUND(In,1) THEN
		//	System is OK because it is last
					
		//If next is not OK
	ELSIF In[nI+1].Out.Status.TerminalState <> eTerminalStates.OP THEN
		IF In[nI+1].Out.Status.Active THEN
			InFault := TRUE;	
			//next is Active and not OK
			IF In[NonActiveIndex].Out.Status.Fault = FALSE THEN
				Meth_SetError(NonActiveIndex);											
			END_IF											
			InFault := TRUE;
		ELSE// Check if there is active module after the problematic module
			FOR internalIndex:= NonActiveIndex TO UPPER_BOUND(In,1) DO
				IF In[internalIndex].Out.Status.Active THEN
					InFault := TRUE;	
					IF In[NonActiveIndex].Out.Status.Fault = FALSE THEN
						Meth_SetError(NonActiveIndex);											
					END_IF	
				END_IF		
			END_FOR
		END_IF
		
									
	ELSE 
			//Continue the next module is OK	;
		 	
	END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="Meth_SendEvent" Id="{eb4303c8-da40-0228-3b13-c421b9fea17c}">
      <Declaration><![CDATA[METHOD Meth_SendEvent : BOOL
VAR_INPUT
	RefEvent : REFERENCE TO EventHelper;
END_VAR
VAR
	EventParameters:EventParam_Typ;	
	EventHeader:EventHeader_Typ;	
	Dummy :DINT :=0;
//	pFlowID :POINTER TO DINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF __ISVALIDREF(RefEvent) THEN
		
		EventHeader.SubsysID :=		pGroupCtrl^.In.Par.GroupID  ; 
 
		EventParameters.MotorID := 		 In[nI].In.Par.ModuleID; 	// Motor ID

		fbPrgmBasic.mEventThrow(RefEvent,ADR(EventHeader),ADR(EventParameters) );			//RefEvent();
		Meth_SendEvent := TRUE;
		
		


		//Debug
		intErrorCounter := intErrorCounter + 1;
		
END_IF	]]></ST>
      </Implementation>
    </Method>
    <Method Name="Meth_SetError" Id="{f59bccd8-d4b7-0dfa-35f2-b4236de5517f}">
      <Declaration><![CDATA[METHOD Meth_SetError : BOOL
VAR_INPUT
	
	TerminalIndex: DINT;
	
END_VAR
VAR
	BitBase : ULINT ;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Meth_SendEvent(Ref_ev_Module_Event);

fnLogMsg(ADR(LogMsg_0), LOG_INFO, 'Terminal Error Q Send Group ID %d,In[nI].In.Par.ModuleID =%d',
							pGroupCtrl^.In.Par.GroupID  ,
							In[TerminalIndex].In.Par.ModuleID,							
							0);

							
BitBase := 2;			
pGroupCtrl^.Out.Status.errorBit := SHL(BitBase,(TerminalIndex -LowerBound));
]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="TerminalGroupReport_FB">
      <LineId Id="380" Count="0" />
      <LineId Id="390" Count="0" />
      <LineId Id="381" Count="1" />
      <LineId Id="462" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="96" Count="0" />
      <LineId Id="391" Count="3" />
      <LineId Id="206" Count="0" />
      <LineId Id="204" Count="0" />
      <LineId Id="464" Count="0" />
      <LineId Id="577" Count="0" />
      <LineId Id="761" Count="2" />
      <LineId Id="533" Count="0" />
      <LineId Id="726" Count="0" />
      <LineId Id="725" Count="0" />
      <LineId Id="642" Count="0" />
      <LineId Id="665" Count="0" />
      <LineId Id="534" Count="0" />
      <LineId Id="582" Count="0" />
      <LineId Id="586" Count="0" />
      <LineId Id="585" Count="0" />
      <LineId Id="794" Count="0" />
      <LineId Id="537" Count="0" />
      <LineId Id="609" Count="0" />
      <LineId Id="541" Count="0" />
      <LineId Id="578" Count="0" />
      <LineId Id="792" Count="0" />
      <LineId Id="611" Count="1" />
      <LineId Id="570" Count="0" />
      <LineId Id="545" Count="0" />
      <LineId Id="640" Count="0" />
      <LineId Id="552" Count="0" />
      <LineId Id="543" Count="0" />
      <LineId Id="610" Count="0" />
      <LineId Id="540" Count="0" />
      <LineId Id="574" Count="0" />
      <LineId Id="539" Count="0" />
      <LineId Id="583" Count="1" />
      <LineId Id="547" Count="0" />
      <LineId Id="553" Count="0" />
      <LineId Id="551" Count="0" />
      <LineId Id="549" Count="0" />
      <LineId Id="548" Count="0" />
      <LineId Id="536" Count="0" />
      <LineId Id="758" Count="0" />
      <LineId Id="754" Count="1" />
      <LineId Id="757" Count="0" />
      <LineId Id="756" Count="0" />
      <LineId Id="555" Count="0" />
      <LineId Id="467" Count="0" />
      <LineId Id="554" Count="0" />
      <LineId Id="466" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="492" Count="0" />
      <LineId Id="491" Count="0" />
      <LineId Id="490" Count="0" />
      <LineId Id="473" Count="0" />
      <LineId Id="376" Count="0" />
      <LineId Id="44" Count="0" />
    </LineIds>
    <LineIds Name="TerminalGroupReport_FB.Meth_HandleModuleNotActive">
      <LineId Id="6" Count="2" />
      <LineId Id="42" Count="1" />
      <LineId Id="9" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="52" Count="0" />
      <LineId Id="37" Count="3" />
      <LineId Id="35" Count="0" />
      <LineId Id="44" Count="2" />
      <LineId Id="53" Count="2" />
      <LineId Id="49" Count="0" />
      <LineId Id="48" Count="0" />
      <LineId Id="47" Count="0" />
      <LineId Id="36" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="17" Count="4" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="TerminalGroupReport_FB.Meth_SendEvent">
      <LineId Id="6" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="42" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="43" Count="0" />
      <LineId Id="45" Count="0" />
      <LineId Id="17" Count="1" />
      <LineId Id="56" Count="0" />
      <LineId Id="67" Count="0" />
      <LineId Id="72" Count="0" />
      <LineId Id="68" Count="0" />
      <LineId Id="57" Count="0" />
      <LineId Id="23" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="TerminalGroupReport_FB.Meth_SetError">
      <LineId Id="6" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="13" Count="2" />
      <LineId Id="12" Count="0" />
      <LineId Id="16" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="18" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>