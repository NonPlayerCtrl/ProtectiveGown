<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.3">
  <POU Name="Queue" Id="{9a463fdc-e8d3-07a5-2df7-6a5578f8093e}" SpecialFunc="None">
    <Declaration><![CDATA[
FUNCTION_BLOCK Queue EXTENDS FB_BaseFb
VAR_INPUT
	{attribute 'OPC.UA.DA' := '0'}
	busySem : BOOL :=FALSE; //used for test and set from outside call
END_VAR

VAR_OUTPUT
	
END_VAR
{attribute 'OPC.UA.DA' := '0'}
VAR CONSTANT
     QUEUE_SIZE  : UINT := 15;
END_VAR

VAR
	{attribute 'OPC.UA.DA' := '0'}
	StructSize : UDINT;
	{attribute 'OPC.UA.DA' := '0'}
	QArr	: ARRAY[0..QUEUE_SIZE] OF STRING[1000];	
	{attribute 'OPC.UA.DA' := '0'}
	pQArr  : POINTER TO  STRING;	
	{attribute 'OPC.UA.DA' := '0'}
	QWriteAdr :POINTER TO  STRING;
	{attribute 'OPC.UA.DA' := '0'}
	QReadAdr : POINTER TO  STRING;
	{attribute 'OPC.UA.DA' := '0'}
	pRead : UDINT;
	{attribute 'OPC.UA.DA' := '0'}
	pWrite :UDINT;
	{attribute 'OPC.UA.DA' := '0'}
	isInitDone :BOOL;
	{attribute 'OPC.UA.DA' := '0'}
	IsOverflow : BOOL;
	{attribute 'OPC.UA.DA' := '0'}
	isBusy :BOOL;	
	{attribute 'OPC.UA.DA' := '0'}
	isFull	: BOOL;
	{attribute 'OPC.UA.DA' := '0'}
	o_isEmpty : BOOL;
	{attribute 'OPC.UA.DA' := '0'}
	Error : BOOL;
	{attribute 'OPC.UA.DA' := '0'}
	ErrorID :USINT;
	{attribute 'OPC.UA.DA' := '0'}
	WriteMsgCount : UDINT;
	{attribute 'OPC.UA.DA' := '0'}
	ReadMsgCount  : UDINT;
	{attribute 'OPC.UA.DA' := '0'}
	o_EntriesCount : UINT;
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="CheckQReadAvailable" Id="{2a650440-47e4-0d42-246b-cd27ce1cc385}">
      <Declaration><![CDATA[METHOD CheckQReadAvailable : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF (isEmpty=FALSE) AND (isBusy = FALSE) THEN
	CheckQReadAvailable:= TRUE;
ELSE	
	CheckQReadAvailable:= FALSE;	
END_IF

]]></ST>
      </Implementation>
    </Method>
    <Method Name="CheckQWriteAvailable" Id="{ce7ed7ce-c16d-0097-03f7-acc174f675f3}">
      <Declaration><![CDATA[METHOD CheckQWriteAvailable : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF (isFull=FALSE) AND (isBusy = FALSE) THEN
	CheckQWriteAvailable:= TRUE;
	
ELSE
	
	CheckQWriteAvailable:= FALSE;	
END_IF

]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clear" Id="{7970bdfd-2714-069e-3b2a-195de24d219c}">
      <Declaration><![CDATA[METHOD Clear : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[		memset(pQArr,0,SIZEOF(QArr));
		pRead		:=0;
		pWrite		:=0;
		
		isInitDone 		:= TRUE;
		o_isEmpty		:=TRUE;
		isFull			:=FALSE;	
		isBusy			:=FALSE;
		Error			:=FALSE;
		ErrorID			:=0;
		
		o_EntriesCount := 0;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="Dequeue" Id="{f3e3a0a4-efd7-087d-1ffd-d76f020ca27a}">
      <Declaration><![CDATA[METHOD Dequeue : BOOL
VAR_INPUT
	pReadData : POINTER TO BYTE;
	MsgLength  : UDINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF THIS^.o_EntriesCount > 0 THEN	
	QReadAdr		:= (pQArr)+(pRead*StructSize);	
	memcpy(pReadData,QReadAdr,MsgLength);// (pDest,pSrc,length)
	THIS^.o_EntriesCount	:= THIS^.o_EntriesCount - 1;	
	pRead:=pRead+1;
	
	IF THIS^.pRead >= QUEUE_SIZE THEN
		THIS^.pRead	:= 0;
	END_IF	
	
    THIS^.IsFull		:= FALSE;
	ReadMsgCount:=ReadMsgCount+1;
	IF pRead=pWrite THEN
		o_isEmpty:=TRUE;
	END_IF	
		
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="Enqueue" Id="{8a114534-2d18-0753-2333-1da3bd1e71bd}">
      <Declaration><![CDATA[METHOD Enqueue : BOOL
VAR_INPUT
	pWriteData : POINTER TO BYTE;	
	MsgLength  : UDINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF o_EntriesCount < QUEUE_SIZE THEN
	isBusy := TRUE;
	QWriteAdr				:=(pQArr)+(pWrite*StructSize);
		IF MsgLength>0 AND (MsgLength<=StructSize)THEN
			memcpy(QWriteAdr,pWriteData,MsgLength);// (pDest,pSrc,length)  		
		ELSIF (MsgLength>StructSize)THEN
			Error		:=TRUE;
			ErrorID 	:= 5;
			memcpy(QWriteAdr,pWriteData,StructSize);// (pDest,pSrc,length)
		ELSE	// MsgLength = 0
			memcpy(QWriteAdr,pWriteData,StructSize);// (pDest,pSrc,length)	
		END_IF;
		pWrite:=pWrite+1;
		WriteMsgCount:=WriteMsgCount+1;
	// increase entries counter
	THIS^.o_EntriesCount	:= THIS^.o_EntriesCount + 1;	
		
	IF pWrite>=(QUEUE_SIZE) THEN
		pWrite:=0;
	END_IF;	
	
	THIS^.o_isEmpty		:= FALSE;
	IF THIS^.o_EntriesCount >= QUEUE_SIZE THEN
		THIS^.IsFull	:= TRUE;
	END_IF	
	
	IF WriteMsgCount>10000000 THEN
		WriteMsgCount:=0;
	END_IF;			
	isBusy := FALSE;
ELSE
	THIS^.IsOverflow	:= TRUE;	
END_IF	]]></ST>
      </Implementation>
    </Method>
    <Property Name="EntriesCount" Id="{db997301-0655-0fea-2a92-0a5b756acc2a}">
      <Declaration><![CDATA[PROPERTY EntriesCount : UINT]]></Declaration>
      <Get Name="Get" Id="{bb9369b1-93d4-0c3e-152e-fa5eab18c4a2}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[EntriesCount :=o_EntriesCount;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{15be1695-e071-0913-1985-a9298d2f096c}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="FB_init" Id="{aa37b90b-1ec2-0d2d-034c-ac8d42c24842}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[		THIS^.pQArr := ADR(QArr);		
		StructSize := SIZEOF(QArr[0]);
		
		memset(pQArr,0,SIZEOF(QArr));
		pRead		:=0;
		pWrite		:=0;
		
		isInitDone 		:= TRUE;
		o_isEmpty		:=TRUE;
		isFull			:=FALSE;	
		isBusy			:=FALSE;
		Error			:=FALSE;
		ErrorID			:=0;
		
		o_EntriesCount := 0;
]]></ST>
      </Implementation>
    </Method>
    <Property Name="isEmpty" Id="{2f202cc8-4cb0-0ff3-1044-88a7ce651056}">
      <Declaration><![CDATA[PROPERTY isEmpty : BOOL]]></Declaration>
      <Get Name="Get" Id="{4c18bd07-2589-0f62-2987-42d5c2848ac8}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[isEmpty := o_isEmpty;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{51a20d30-5e8e-0701-1b69-c08e2c5db79e}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="Peek" Id="{6c157c0d-dff1-0582-27db-323ce1b00d25}">
      <Declaration><![CDATA[METHOD Peek : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="ReadCurrentEntry" Id="{9f36baeb-fc72-09c4-2e61-62a1aca635d6}">
      <Declaration><![CDATA[METHOD ReadCurrentEntry : BOOL//Only Read not Pop
VAR_INPUT
	pReadData : POINTER TO BYTE;
	MsgLength  : UDINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF THIS^.o_EntriesCount > 0 THEN	
	QReadAdr		:= (pQArr)+(pRead*StructSize);	
	memcpy(pReadData,QReadAdr,MsgLength);// (pDest,pSrc,length)
	ReadCurrentEntry := TRUE;	
ELSE
	ReadCurrentEntry := FALSE;	
END_IF]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="Queue">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="Queue.CheckQReadAvailable">
      <LineId Id="6" Count="1" />
      <LineId Id="9" Count="0" />
      <LineId Id="11" Count="3" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="Queue.CheckQWriteAvailable">
      <LineId Id="8" Count="1" />
      <LineId Id="13" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="7" Count="0" />
      <LineId Id="6" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="Queue.Clear">
      <LineId Id="10" Count="10" />
      <LineId Id="6" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="Queue.Dequeue">
      <LineId Id="15" Count="1" />
      <LineId Id="12" Count="0" />
      <LineId Id="19" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="20" Count="1" />
      <LineId Id="23" Count="2" />
      <LineId Id="22" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="26" Count="2" />
      <LineId Id="13" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="Queue.Enqueue">
      <LineId Id="49" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="9" Count="8" />
      <LineId Id="20" Count="1" />
      <LineId Id="27" Count="0" />
      <LineId Id="43" Count="0" />
      <LineId Id="42" Count="0" />
      <LineId Id="28" Count="2" />
      <LineId Id="44" Count="1" />
      <LineId Id="48" Count="0" />
      <LineId Id="46" Count="1" />
      <LineId Id="33" Count="3" />
      <LineId Id="38" Count="3" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="Queue.EntriesCount.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="Queue.EntriesCount.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="Queue.FB_init">
      <LineId Id="24" Count="1" />
      <LineId Id="23" Count="0" />
      <LineId Id="13" Count="2" />
      <LineId Id="26" Count="0" />
      <LineId Id="17" Count="4" />
      <LineId Id="27" Count="1" />
      <LineId Id="22" Count="0" />
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="Queue.isEmpty.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="Queue.isEmpty.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="Queue.Peek">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="Queue.ReadCurrentEntry">
      <LineId Id="15" Count="1" />
      <LineId Id="12" Count="0" />
      <LineId Id="19" Count="0" />
      <LineId Id="35" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>