<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.3">
  <POU Name="FB_BaseFb" Id="{20615775-f709-0a1a-3148-c70fff74a325}" SpecialFunc="None">
    <Declaration><![CDATA[//
// In order for extender of this FB
// -- to set specific logger name category call SetLoggerCategoryName(<the name>) (from FB_Init())

FUNCTION_BLOCK FB_BaseFb
VAR
	{attribute 'OPC.UA.DA' := '0'}
	LogMsg_0: LogMsg;
	{attribute 'OPC.UA.DA' := '0'}
	pLogMsgToUse: POINTER TO LogMsg := ADR(LogMsg_0);
	{attribute 'OPC.UA.DA' := '0'}
	DINT_0 :DINT;
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="FB_init" Id="{9656bbc2-4143-0898-31c3-0a70089a4b13}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetLoggerCategoryName" Id="{dca232f9-6d2b-4000-85e7-8133841261dc}">
      <Declaration><![CDATA[METHOD PUBLIC GetLoggerCategoryName : pointer to string
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[GetLoggerCategoryName	:= ADR(THIS^.pLogMsgToUse^.logData.category);]]></ST>
      </Implementation>
    </Method>
    <Method Name="LogError" Id="{1d9eb8c5-b473-0e26-3ef6-2c31823bc364}">
      <Declaration><![CDATA[METHOD LogError
VAR_INPUT
	textMessage : STRING[LOG_MSG_TEXT_LENGTH];
	param1 : DINT;
	param2 : DINT;
	param3 : DINT;	
	param4 : DINT;
	param5 : DINT;
	param6 : DINT;	
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pLogMsgToUse^.LogMsg(LOG_ERROR, textMessage, param1, param2, param3, param4, param5, param6);
LogTransfer();
	]]></ST>
      </Implementation>
    </Method>
    <Method Name="LogError_v2" Id="{560912c7-ebac-4276-b060-d60c6024e8ac}">
      <Declaration><![CDATA[METHOD LogError_v2 : BOOL
VAR_INPUT
	textMessage : STRING[LOG_MSG_TEXT_LENGTH];
	param1 : ANY;
	param2 : ANY;
	param3 : ANY;	
	param4 : ANY;
	param5 : ANY;
	param6 : ANY;	
	param7 : ANY;	
	param8 : ANY;
	param9 : ANY;
	param10 : ANY;		
END_VAR
VAR
	param1_Arg   :T_arg;
	param2_Arg   :T_arg;
	param3_Arg   :T_arg;
	param4_Arg   :T_arg;
	param5_Arg   :T_arg;
	param6_Arg   :T_arg;
	param7_Arg   :T_arg;
	param8_Arg   :T_arg;
	param9_Arg   :T_arg;
	param10_Arg  :T_arg;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
param1_Arg	:=fnCnvToTarg(param1);
param2_Arg	:=fnCnvToTarg(param2);
param3_Arg	:=fnCnvToTarg(param3);
param4_Arg	:=fnCnvToTarg(param4);
param5_Arg	:=fnCnvToTarg(param5);
param6_Arg	:=fnCnvToTarg(param6);
param7_Arg	:=fnCnvToTarg(param7);
param8_Arg	:=fnCnvToTarg(param8);
param9_Arg	:=fnCnvToTarg(param9);
param10_Arg	:=fnCnvToTarg(param10);

pLogMsgToUse^.LogMsg_v2(LOG_ERROR, textMessage, param1_Arg, param2_Arg, param3_Arg, param4_Arg, param5_Arg, param6_Arg, param7_Arg ,param8_Arg ,param9_Arg,param10_Arg);
LogTransfer();
	]]></ST>
      </Implementation>
    </Method>
    <Method Name="LogInfo" Id="{e021add1-9af5-0417-15fb-e48ba4956979}">
      <Declaration><![CDATA[METHOD LogInfo
VAR_INPUT
	textMessage : STRING[LOG_MSG_TEXT_LENGTH];
	param1 : DINT;
	param2 : DINT;
	param3 : DINT;	
	param4 : DINT;
	param5 : DINT;
	param6 : DINT;	
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pLogMsgToUse^.LogMsg(LOG_INFO, textMessage, param1, param2, param3, param4, param5, param6);
LogTransfer();
	]]></ST>
      </Implementation>
    </Method>
    <Method Name="LogInfo_v2" Id="{e2599e53-39c4-48a6-a424-2bb54be4856c}">
      <Declaration><![CDATA[METHOD LogInfo_v2 : BOOL
VAR_INPUT
	textMessage : STRING[LOG_MSG_TEXT_LENGTH];
	param1 : ANY;
	param2 : ANY;
	param3 : ANY;	
	param4 : ANY;
	param5 : ANY;
	param6 : ANY;	
	param7 : ANY;	
	param8 : ANY;
	param9 : ANY;
	param10 : ANY;		
END_VAR
VAR
	param1_Arg   :T_arg;
	param2_Arg   :T_arg;
	param3_Arg   :T_arg;
	param4_Arg   :T_arg;
	param5_Arg   :T_arg;
	param6_Arg   :T_arg;
	param7_Arg   :T_arg;
	param8_Arg   :T_arg;
	param9_Arg   :T_arg;
	param10_Arg  :T_arg;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
param1_Arg	:=fnCnvToTarg(param1);
param2_Arg	:=fnCnvToTarg(param2);
param3_Arg	:=fnCnvToTarg(param3);
param4_Arg	:=fnCnvToTarg(param4);
param5_Arg	:=fnCnvToTarg(param5);
param6_Arg	:=fnCnvToTarg(param6);
param7_Arg	:=fnCnvToTarg(param7);
param8_Arg	:=fnCnvToTarg(param8);
param9_Arg	:=fnCnvToTarg(param9);
param10_Arg	:=fnCnvToTarg(param10);

pLogMsgToUse^.LogMsg_v2(LOG_INFO, textMessage, param1_Arg, param2_Arg, param3_Arg, param4_Arg, param5_Arg, param6_Arg, param7_Arg ,param8_Arg ,param9_Arg,param10_Arg);
LogTransfer();
	]]></ST>
      </Implementation>
    </Method>
    <Method Name="LogTransfer" Id="{da0ee736-797e-046e-1d99-9d96cc97d542}">
      <Declaration><![CDATA[METHOD LogTransfer
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fnLogTransfer(pLogMsgToUse); 
]]></ST>
      </Implementation>
    </Method>
    <Method Name="LogWarning" Id="{f4ec3c90-7894-06ff-1ee8-70db9ba16242}">
      <Declaration><![CDATA[METHOD LogWarning
VAR_INPUT
	textMessage : STRING[LOG_MSG_TEXT_LENGTH];
	param1 : DINT;
	param2 : DINT;
	param3 : DINT;	
	param4 : DINT;
	param5 : DINT;
	param6 : DINT;	
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pLogMsgToUse^.LogMsg(LOG_WARNING, textMessage, param1, param2, param3, param4, param5, param6);
LogTransfer();
]]></ST>
      </Implementation>
    </Method>
    <Method Name="LogWarning_v2" Id="{bf168128-2a82-4368-8877-14c1e708d5e3}">
      <Declaration><![CDATA[METHOD LogWarning_v2 : BOOL
VAR_INPUT
	textMessage : STRING[LOG_MSG_TEXT_LENGTH];
	param1 : ANY;
	param2 : ANY;
	param3 : ANY;	
	param4 : ANY;
	param5 : ANY;
	param6 : ANY;	
	param7 : ANY;	
	param8 : ANY;
	param9 : ANY;
	param10 : ANY;		
END_VAR
VAR
	param1_Arg   :T_arg;
	param2_Arg   :T_arg;
	param3_Arg   :T_arg;
	param4_Arg   :T_arg;
	param5_Arg   :T_arg;
	param6_Arg   :T_arg;
	param7_Arg   :T_arg;
	param8_Arg   :T_arg;
	param9_Arg   :T_arg;
	param10_Arg  :T_arg;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
param1_Arg	:=fnCnvToTarg(param1);
param2_Arg	:=fnCnvToTarg(param2);
param3_Arg	:=fnCnvToTarg(param3);
param4_Arg	:=fnCnvToTarg(param4);
param5_Arg	:=fnCnvToTarg(param5);
param6_Arg	:=fnCnvToTarg(param6);
param7_Arg	:=fnCnvToTarg(param7);
param8_Arg	:=fnCnvToTarg(param8);
param9_Arg	:=fnCnvToTarg(param9);
param10_Arg	:=fnCnvToTarg(param10);

pLogMsgToUse^.LogMsg_v2(LOG_WARNING, textMessage, param1_Arg, param2_Arg, param3_Arg, param4_Arg, param5_Arg, param6_Arg, param7_Arg ,param8_Arg ,param9_Arg,param10_Arg);
LogTransfer();
	]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetLogger" Id="{499c98e5-0ca0-0320-095d-6664e9beb2c2}">
      <Declaration><![CDATA[METHOD SetLogger
VAR_INPUT
	logMsgToUse: REFERENCE TO LogMsg;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF(__ISVALIDREF(logMsgToUse)) THEN
	pLogMsgToUse := ADR(logMsgToUse);
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetLoggerCategoryName" Id="{aaaf4ea5-eb37-0aa3-2519-f60aae6b54ca}">
      <Declaration><![CDATA[METHOD SetLoggerCategoryName
VAR_INPUT
	categoryName: STRING;	// Removed "REFERENCE TO "
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[categoryName[LOG_MSG_CATEGORY_LENGTH - 1] := 0;

// do not use pLogMsgToUse since the external logger logger could has be set
LogMsg_0.InitLogger(categoryName, 0,0);
]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_BaseFb">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_BaseFb.FB_init">
      <LineId Id="10" Count="0" />
    </LineIds>
    <LineIds Name="FB_BaseFb.GetLoggerCategoryName">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_BaseFb.LogError">
      <LineId Id="22" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_BaseFb.LogError_v2">
      <LineId Id="47" Count="1" />
      <LineId Id="60" Count="4" />
      <LineId Id="92" Count="2" />
      <LineId Id="91" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="13" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_BaseFb.LogInfo">
      <LineId Id="22" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_BaseFb.LogInfo_v2">
      <LineId Id="47" Count="1" />
      <LineId Id="60" Count="4" />
      <LineId Id="92" Count="2" />
      <LineId Id="91" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="13" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_BaseFb.LogTransfer">
      <LineId Id="6" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_BaseFb.LogWarning">
      <LineId Id="22" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_BaseFb.LogWarning_v2">
      <LineId Id="47" Count="1" />
      <LineId Id="60" Count="4" />
      <LineId Id="92" Count="2" />
      <LineId Id="91" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="13" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_BaseFb.SetLogger">
      <LineId Id="7" Count="2" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_BaseFb.SetLoggerCategoryName">
      <LineId Id="20" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="6" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>