<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.3">
  <POU Name="fnCnvToTarg" Id="{02762320-3576-4a8a-96db-062f502db6f8}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION fnCnvToTarg : T_Arg
VAR_INPUT
	param1:ANY;
END_VAR
VAR
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
CASE 	 param1.TypeClass OF	
	 __SYSTEM.TYPE_CLASS.TYPE_REAL:
			 fnCnvToTarg.eType	:= E_ArgType.ARGTYPE_REAL;
	 __SYSTEM.TYPE_CLASS.TYPE_INT:
			 fnCnvToTarg.eType	:= E_ArgType.ARGTYPE_INT;	 
	 __SYSTEM.TYPE_CLASS.TYPE_LREAL:
			 fnCnvToTarg.eType	:= E_ArgType.ARGTYPE_LREAL;
	 __SYSTEM.TYPE_CLASS.TYPE_SINT:
			 fnCnvToTarg.eType	:= E_ArgType.ARGTYPE_SINT;	 		
	 __SYSTEM.TYPE_CLASS.TYPE_DINT:
			 fnCnvToTarg.eType	:= E_ArgType.ARGTYPE_DINT;
	 __SYSTEM.TYPE_CLASS.TYPE_USINT:
			 fnCnvToTarg.eType	:= E_ArgType.ARGTYPE_USINT;	 
	 __SYSTEM.TYPE_CLASS.TYPE_UINT:
			 fnCnvToTarg.eType	:= E_ArgType.ARGTYPE_UINT;
	 __SYSTEM.TYPE_CLASS.TYPE_UDINT:
			 fnCnvToTarg.eType	:= E_ArgType.ARGTYPE_UDINT;	 	
	 __SYSTEM.TYPE_CLASS.TYPE_ULINT:
			 fnCnvToTarg.eType	:= E_ArgType.ARGTYPE_ULARGE;
	__SYSTEM.TYPE_CLASS.TYPE_LINT:
			 fnCnvToTarg.eType	:= E_ArgType.ARGTYPE_LARGE;	 			 
	 __SYSTEM.TYPE_CLASS.TYPE_STRING:
			 fnCnvToTarg.eType	:= E_ArgType.ARGTYPE_STRING;
	 __SYSTEM.TYPE_CLASS.TYPE_BOOL:
			 fnCnvToTarg.eType	:= E_ArgType.ARGTYPE_BYTE;//Not a Bug use to convert bool to byte for string format	 
	 __SYSTEM.TYPE_CLASS.TYPE_BYTE:
			 fnCnvToTarg.eType	:= E_ArgType.ARGTYPE_BYTE;
	 __SYSTEM.TYPE_CLASS.TYPE_WORD:
			 fnCnvToTarg.eType	:= E_ArgType.ARGTYPE_WORD;	 		
	 __SYSTEM.TYPE_CLASS.TYPE_DWORD:
			 fnCnvToTarg.eType	:= E_ArgType.ARGTYPE_DWORD;
	 __SYSTEM.TYPE_CLASS.TYPE_ENUM:
	 		IF param1.diSize = SIZEOF(INT) THEN
			 	fnCnvToTarg.eType	:= E_ArgType.ARGTYPE_INT;	
			ELSIF param1.diSize = SIZEOF(DINT) THEN		 
				fnCnvToTarg.eType	:= E_ArgType.ARGTYPE_DINT;	
			ELSIF param1.diSize = SIZEOF(UDINT) THEN		 
				fnCnvToTarg.eType	:= E_ArgType.ARGTYPE_UDINT;			
			ELSIF param1.diSize = SIZEOF(UINT) THEN		 
				fnCnvToTarg.eType	:= E_ArgType.ARGTYPE_UINT;	
			END_IF	
ELSE
	RETURN; 
END_CASE

fnCnvToTarg.pData := param1.pValue;
fnCnvToTarg.cbLen := DINT_TO_UDINT(param1.diSize);
]]></ST>
    </Implementation>
    <LineIds Name="fnCnvToTarg">
      <LineId Id="13" Count="2" />
      <LineId Id="17" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="24" Count="2" />
      <LineId Id="23" Count="0" />
      <LineId Id="28" Count="6" />
      <LineId Id="27" Count="0" />
      <LineId Id="78" Count="0" />
      <LineId Id="77" Count="0" />
      <LineId Id="79" Count="1" />
      <LineId Id="37" Count="9" />
      <LineId Id="62" Count="1" />
      <LineId Id="61" Count="0" />
      <LineId Id="64" Count="1" />
      <LineId Id="67" Count="0" />
      <LineId Id="66" Count="0" />
      <LineId Id="69" Count="0" />
      <LineId Id="68" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="52" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="16" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="9" Count="1" />
      <LineId Id="7" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>