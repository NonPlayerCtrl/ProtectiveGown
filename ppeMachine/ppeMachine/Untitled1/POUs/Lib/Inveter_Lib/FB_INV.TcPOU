<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.3">
  <POU Name="FB_INV" Id="{607f9f7b-4e97-4f79-917f-d4a6986958b4}" SpecialFunc="None">
    <Declaration><![CDATA[(*****************************************************************************************
 *  Enverter Oparation FB
 * Author: Dan Naaman
 *****************************************************************************************
 * Implementation of FB
 Actual_Vel_Link- Link to 'vl velocity actual value' From Device IO
 Status_Word_Link- Link to 'Status word' From Device IO
 Set_Vel_Link-Link to 'vl target velocit' From Device IO
 Cntrl_Word_Link-Link to 'Control word' From Device IO
 MasterNetId- Get Value from Ethercat Master In Ethercat Tab
 nSlaveAddr- Get From Actual Drive In Ethercat Tab 'Ethercat Addr' In Device Io
 nIndex,nSubIndex - Get From Actual Drive : In Proccess Data Tab You can Right Click On 'PDO Content'
                    Choose 'Insert' And In dictinarry You can See all Indexes and sub indexes of all
					available Parameters.Once You know The  nIndex,nSubIndex  Click Cancel . 
Env_Status-  shows Current Status Of Inverter .
ResetError- Reset The Error And Set Enable To False :
 *****************************************************************************************)
 
FUNCTION_BLOCK PUBLIC FB_INV
VAR_INPUT
	HWlink:ST_BasicInverter;
	//Set_Vel_Link AT %Q*:INT;
	//INV_Enable:BOOL;
	//ResetError:BOOL;
	ctrl:InverterCtrl_Typ;
	MasterNetId:T_AmsNetID:='15.17.210.19.7.1';
	nSlaveAddr:UINT;
	nSubIndex:BYTE;
	nIndex:WORD;
	
END_VAR
VAR_OUTPUT
	//Actual_Vel_Link AT %I*:INT:=0;
	Error:BOOL;
	ErrorCode:UINT;
	Inv_Status:Enum_INV_Status;
END_VAR
VAR
	//Status_Word_Link AT %I*:UINT;
	//Cntrl_Word_Link AT %Q*:UINT;
	FB_EcCoeSdoRead_DriveError	: FB_EcCoeSdoRead;
	INV_Seq:Enum_INV_Ctrl;
	
	
END_VAR

	
	]]></Declaration>
    <Implementation>
      <ST><![CDATA[CASE INV_Seq OF
	Enum_INV_Ctrl.ENV_Disable:
		HWlink.ControlWord:=INT_TO_UINT(Enum_INV_Ctrl.ENV_Disable);
		IF ctrl.Start THEN 
			INV_Seq:=Enum_INV_Ctrl.ENV_GetReady;
		END_IF
	Enum_INV_Ctrl.ENV_GetReady:
		HWlink.ControlWord:=INT_TO_UINT(Enum_INV_Ctrl.ENV_GetReady );
		IF  HWlink.StatusWord =INT_TO_UINT(Enum_INV_Status.ENV_ReadyTo_switchon) THEN 
			INV_Seq:=Enum_INV_Ctrl.ENV_Switch_on;
		END_IF
	Enum_INV_Ctrl.ENV_Switch_on://enable2
		HWlink.ControlWord:=INT_TO_UINT(Enum_INV_Ctrl.ENV_Switch_on);
		IF  HWlink.StatusWord =INT_TO_UINT(Enum_INV_Status.ENV_SwitchedOn) THEN 
			INV_Seq:=Enum_INV_Ctrl.ENV_enable_operation;
		END_IF
	Enum_INV_Ctrl.ENV_enable_operation://enable3
		HWlink.ControlWord:=INT_TO_UINT(Enum_INV_Ctrl.ENV_Enable_operation);  
		IF  HWlink.StatusWord =INT_TO_UINT(Enum_INV_Status.ENV_Operation_Enabled) THEN 
			INV_Seq:=Enum_INV_Ctrl.ENV_Run;
		END_IF
	Enum_INV_Ctrl.ENV_Run:
		IF ctrl.Start =FALSE THEN 
			HWlink.ControlWord:=INT_TO_UINT(Enum_INV_Ctrl.ENV_Disable);
			IF  HWlink.StatusWord =INT_TO_UINT(Enum_INV_Status.ENV_Off) THEN 
				INV_Seq:=Enum_INV_Ctrl.ENV_Disable;
			END_IF
		END_IF
	Enum_INV_Ctrl.ENV_Trip: //error
		IF ctrl.ResetError THEN 
			HWlink.ControlWord:=INT_TO_UINT(Enum_INV_Ctrl.ENV_Reset_Error);
			ctrl.ResetError:=FALSE;
		END_IF
		IF  HWlink.StatusWord =INT_TO_UINT(Enum_INV_Status.ENV_Off) THEN 
			INV_Seq:=0;
			HWlink.ControlWord:=INT_TO_UINT(Enum_INV_Ctrl.ENV_Disable);
			ctrl.Start:=FALSE;
			Error:=FALSE;
			ErrorCode:=0;
		END_IF
		
END_CASE

Error:=HWlink.StatusWord =INT_TO_UINT(Enum_INV_Status.ENV_Trip);
IF Error AND INV_Seq <> Enum_INV_Ctrl.ENV_Trip THEN 
	INV_Seq:=Enum_INV_Ctrl.ENV_Trip;
	FB_EcCoeSdoRead_DriveError.bExecute:=TRUE;
END_IF

Inv_Status:=UINT_TO_INT(HWlink.StatusWord);

FB_EcCoeSdoRead_DriveError(
	sNetId:=MasterNetId , //'169.254.44.60.2.1'
	nSlaveAddr:=1001 , //1001
	nSubIndex:=16#0000 ,//16#0000 
	nIndex:=16#603F , //16#603F
	pDstBuf:=ADR(ErrorCode) , 
	cbBufLen:=SIZEOF(ErrorCode) , 
	bExecute:= , 
	tTimeout:= , 
	bBusy=> , 
	bError=> , 
	nErrId=> );
	
	IF  FB_EcCoeSdoRead_DriveError.bExecute =TRUE AND FB_EcCoeSdoRead_DriveError.bBusy= FALSE THEN 
		 FB_EcCoeSdoRead_DriveError.bExecute:=FALSE;
	END_IF
ctrl.ActualVelocity:=HWlink.ActualSpeed;
HWlink.SetSpeed:=ctrl.SetVelocity;	
	]]></ST>
    </Implementation>
    <LineIds Name="FB_INV">
      <LineId Id="25" Count="9" />
      <LineId Id="37" Count="14" />
      <LineId Id="53" Count="10" />
      <LineId Id="127" Count="1" />
      <LineId Id="64" Count="6" />
      <LineId Id="120" Count="0" />
      <LineId Id="71" Count="0" />
      <LineId Id="115" Count="0" />
      <LineId Id="73" Count="0" />
      <LineId Id="116" Count="0" />
      <LineId Id="74" Count="0" />
      <LineId Id="103" Count="10" />
      <LineId Id="121" Count="1" />
      <LineId Id="126" Count="0" />
      <LineId Id="123" Count="0" />
      <LineId Id="125" Count="0" />
      <LineId Id="124" Count="0" />
      <LineId Id="176" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>